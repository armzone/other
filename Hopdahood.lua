-- ‚úÖ Auto Server Hop (Random Server with < 10 Players)
local hopInterval = 300
local maxPlayers = 10

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local PlaceId = game.PlaceId
local JobId = game.JobId

-- üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏°‡∏±‡πâ‡∏¢
local function isCurrentServerTooFull()
    local success, info = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    end)

    if success and info and info.data then
        for _, server in ipairs(info.data) do
            if server.id == JobId then
                return server.playing > maxPlayers
            end
        end
    end
    return false
end

-- üåÄ ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ó‡∏µ‡πà‡∏Ñ‡∏ô < maxPlayers
local function getRandomLowPopServer()
    local cursor = ""
    local candidateServers = {}
    local baseUrl = "https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100&cursor=%s"

    for _ = 1, 5 do
        local url = string.format(baseUrl, PlaceId, cursor)
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)

        if not success or not result or not result.data then break end

        for _, server in ipairs(result.data) do
            if server.id ~= JobId and server.playing < maxPlayers then
                table.insert(candidateServers, server)
            end
        end

        if not result.nextPageCursor then break end
        cursor = result.nextPageCursor
        task.wait(0.5)
    end

    if #candidateServers > 0 then
        return candidateServers[math.random(1, #candidateServers)]
    end

    return nil
end

-- üîÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥ ‚Üí ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
task.spawn(function()
    while true do
        task.wait(5)
        if isCurrentServerTooFull() then
            print("‚ö†Ô∏è ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏Ñ‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏Å‡∏¥‡∏ô " .. maxPlayers .. " ‚Üí ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÉ‡∏´‡∏°‡πà...")
            local newServer = getRandomLowPopServer()
            if newServer then
                print("üéØ ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°:", newServer.id, "‡∏Ñ‡∏ô:", newServer.playing)
                TeleportService:TeleportToPlaceInstance(PlaceId, newServer.id, Players.LocalPlayer)
            else
                warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏ô < " .. maxPlayers)
            end
        else
            print("‚úÖ ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ô‡∏µ‡πâ‡πÇ‡∏≠‡πÄ‡∏Ñ ‚Üí ‡∏£‡∏≠‡∏≠‡∏µ‡∏Å " .. hopInterval .. " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
            task.wait(hopInterval)
        end
    end
end)
