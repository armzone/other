-- üõ°Ô∏è Anti-Data Leak Detector
-- ‡∏£‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
-- ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
-- ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö: JobId, HardwareId, IP, UserId, Username

repeat wait() until game:IsLoaded()
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
local function Notify(title, text)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = 10,
        Button1 = "OK"
    })
    print("[‚ö†Ô∏è Anti-Leak] " .. title .. ": " .. text)
end

-- 1. ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á Hardware ID
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local original_GetClientId = RbxAnalyticsService.GetClientId

RbxAnalyticsService.GetClientId = newcclosure(function(self, ...)
    local source = debug.info(2, 's') or "Unknown"
    Notify("‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö!", "‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏î‡∏∂‡∏á Hardware ID")
    Notify("‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤", "‡∏à‡∏≤‡∏Å: " .. source)
    return "HACKED-HWID-PROTECTED" -- ‡∏õ‡∏•‡∏≠‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
end)

-- 2. ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á JobId
local mt = getrawmetatable(game)
setreadonly(mt, false)
local original_index = mt.__index

mt.__index = newcclosure(function(t, k)
    if t == game and k == "JobId" then
        local source = debug.info(2, 's') or "Unknown"
        Notify("‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö!", "‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏≠‡πà‡∏≤‡∏ô game.JobId")
        Notify("‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤", "‡∏à‡∏≤‡∏Å: " .. source)
        return "FAKE-JOBID-PROTECTED"
    end
    return original_index(t, k)
end)

-- 3. ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á IP ‡∏ú‡πà‡∏≤‡∏ô http_request
local original_http_request = http_request or request or syn.request

if original_http_request then
    http_request = newcclosure(function(request_table)
        local url = request_table.Url or request_table.url
        if type(url) == "string" then
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö API ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á IP
            if string.find(url, "ip%-api") or string.find(url, "ipinfo") or string.find(url, "geo") then
                Notify("‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö!", "‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏î‡∏∂‡∏á IP ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
                Notify("URL", url)
                return { Success = true, Body = '{"ip":"127.0.0.1 (Blocked)"}' }
            end

            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö Webhook
            if string.find(url, "discord%.com/api/webhooks/") then
                local body = request_table.Body or "{}"
                if string.find(body, "JobId") or string.find(body, "Hardware") or string.find(body, "UserId") then
                    Notify("‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö!", "‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord Webhook!")
                    Notify("URL", url)
                    return { Success = false, StatusMessage = "Request blocked by Anti-Leak" }
                end
            end
        end
        return original_http_request(request_table)
    end)

    -- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô request, syn.request
    getgenv().request = http_request
    getgenv().syn = getgenv().syn and setmetatable({ request = http_request }, {}) or nil
end

-- 4. ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å JobId ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î
local original_setclipboard = setclipboard
setclipboard = newcclosure(function(text)
    if string.find(tostring(text), game.JobId) or string.find(tostring(text), player.UserId) then
        Notify("‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö!", "‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å JobId ‡∏´‡∏£‡∏∑‡∏≠ UserId ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì!")
        Notify("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", tostring(text))
        return
    end
    return original_setclipboard(text)
end)

-- 5. ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
local original_Player = {}
for k, v in pairs(player) do
    original_Player[k] = v
end

local player_mt = getrawmetatable(player)
setreadonly(player_mt, false)
local original_player_index = player_mt.__index

player_mt.__index = newcclosure(function(t, k)
    if t == player and (k == "UserId" or k == "Name" or k == "DisplayName") then
        local source = debug.info(2, 's') or "Unknown"
        if debug.info(2, 'n') ~= "getgenv" then -- ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å getgenv()
            Notify("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", k .. " ‡∏ñ‡∏π‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏≠‡∏∑‡πà‡∏ô")
            Notify("‡∏à‡∏≤‡∏Å", source)
        end
    end
    return original_player_index(t, k)
end)

-- ‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
Notify("üõ°Ô∏è Anti-Data Leak", "‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏±‡πà‡∏ß‡πÑ‡∏´‡∏•‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
print("‚úÖ Anti-Leak Detector ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‚Äî ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢...")


spawn(function()
    wait(5)
    print("‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡∏≠‡πà‡∏≤‡∏ô JobId")
    print(game.JobId) -- ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏ö
end)
