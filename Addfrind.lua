-- Made By Masterp (Enhanced: Requeue if failed, Add Limit, Handle Special Errors)
repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer.Character

local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local LocalPlayer = Players.LocalPlayer

local PlayersQueue = {}
local isProcessing = false
local RequeueCount = {}
local REQUEUE_LIMIT = 3 -- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà Requeue
local FRIEND_LIMIT = 200 -- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô Roblox

-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏•‡∏á‡∏Ñ‡∏¥‡∏ß (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á)
local function addPlayer(player)
	if player ~= LocalPlayer and not table.find(PlayersQueue, player) then
		table.insert(PlayersQueue, player)
		print(player.Name .. " has been added to queue.")
	end
end

-- ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏¥‡∏ß
local function removePlayer(player)
	for i = #PlayersQueue, 1, -1 do
		if PlayersQueue[i] == player then
			table.remove(PlayersQueue, i)
			print(player.Name .. " has been removed from queue.")
		end
	end
end

-- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° event
Players.PlayerAdded:Connect(addPlayer)
Players.PlayerRemoving:Connect(removePlayer)

-- ‡πÉ‡∏™‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°
print("============== << INITIALIZING QUEUE >> ==============")
for _, player in ipairs(Players:GetPlayers()) do
	addPlayer(player)
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
local function isFriendLimitReached()
	local success, friends = pcall(function()
		return LocalPlayer:GetFriendsOnline()
	end)
	return success and #friends >= FRIEND_LIMIT
end

-- ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏Ñ‡∏ô
local function processQueue()
	while true do
		task.wait(1)
		if not isProcessing and #PlayersQueue > 0 then
			isProcessing = true
			local player = PlayersQueue[1]
			table.remove(PlayersQueue, 1)

			if player and player.Parent == Players then
				-- ‡πÄ‡∏ä‡πá‡∏Ñ friend ‡πÄ‡∏ï‡πá‡∏°
				if isFriendLimitReached() then
					print("‚ùó Friend limit reached. Stopping friend requests.")
					StarterGui:SetCore("SendNotification", {
						Title = "Friend Limit",
						Text = "You have reached your friend limit.",
						Duration = 4
					})
					break -- ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å while true
				end

				local success, result = pcall(function()
					return LocalPlayer:RequestFriendship(player)
				end)

				if success and result == true then
					print("‚úÖ Friend request sent to: " .. player.Name)
					StarterGui:SetCore("SendNotification", {
						Title = "Friend Request Sent",
						Text = player.Name,
						Duration = 3
					})
				else
					local msg = tostring(result)
					-- ‡∏ñ‡πâ‡∏≤ already friends ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á pending ‡∏≠‡∏¢‡∏π‡πà ‡∏à‡∏∞‡πÑ‡∏°‡πà requeue
					if msg:find("already friends") or msg:find("pending") then
						print("‚ö†Ô∏è Already friends or pending: " .. player.Name)
					else
						RequeueCount[player.UserId] = (RequeueCount[player.UserId] or 0) + 1
						if RequeueCount[player.UserId] <= REQUEUE_LIMIT then
							print("‚ùå Failed to send friend request to: " .. player.Name .. " - Requeuing ("..RequeueCount[player.UserId]..")")
							StarterGui:SetCore("SendNotification", {
								Title = "Friend Request Failed",
								Text = player.Name .. " (Retry: "..RequeueCount[player.UserId]..")",
								Duration = 3
							})
							table.insert(PlayersQueue, player)
						else
							print("üö´ Skipping " .. player.Name .. " after "..REQUEUE_LIMIT.." failed attempts.")
							StarterGui:SetCore("SendNotification", {
								Title = "Friend Request Skipped",
								Text = player.Name,
								Duration = 3
							})
						end
					end
				end
			else
				print("‚ö†Ô∏è Player is no longer in game: " .. (player and player.Name or "Unknown"))
			end

			isProcessing = false
			task.wait(3) -- ‡∏£‡∏≠‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà
		end
	end
end

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏π‡∏õ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
task.spawn(processQueue)
